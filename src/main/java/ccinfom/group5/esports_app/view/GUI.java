/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ccinfom.group5.esports_app.view;

import ccinfom.group5.esports_app.utils.GeneralUtil;
import javax.swing.JButton;

import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.lang.reflect.Array;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;

/**
 *
 * @author Sean Kyle
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        
        playerNames = new ArrayList<String>();
        teamNames = new ArrayList<String>();
        sponsorNames = new ArrayList<String>();
    




        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        mainMainPanel = new JPanel();
        mainPanel = new JPanel();
        bannerPanel = new JPanel();
        jLabel1 = new JLabel();
        lowerPanel = new JPanel();
        lowerLeftPanel = new JPanel();
        menuLbl = new JLabel();
        mainViewBtn = new JButton();
        makeTransacBtn = new JButton();
        genReportsBtn = new JButton();
        exitBtn = new JButton();
        lowerRightPanel = new JPanel();
        mainViewPanel = new JPanel();
        upperMainViewPanel = new JPanel();
        jScrollPane1 = new JScrollPane();
        String[] columnNames = {"Column1", "Column2"};
        Object[][] data = {
            {"Data1", "Data2"},
        };

        mainViewTableModel = new DefaultTableModel(data, columnNames);
        mainViewTable = new JTable();
        lowerMainViewPanel = new JPanel();
        mainViewMainMenuBtn = new JButton();
        tablesMainViewComboBox = new JComboBox<>();
        executeQueryMainViewBtn = new JButton();
        jScrollPane3 = new JScrollPane();
        queryMainViewTxtArea = new JTextArea();
        makeTransacPanel = new JPanel();
        leftMakeTransacPanel = new JPanel();
        transferPlayerBtn = new JButton();
        changeSponsorBtn = new JButton();
        updateTeamBtn = new JButton();
        mainMenuTransacBtn = new JButton();
        rightMakeTransacPanel = new JPanel();
        transferPlayerPanel = new JPanel();
        jScrollPane2 = new JScrollPane();
        playerTransferPlayerComboBox = new JComboBox<>();
        finalTransferPlayerBtn = new JButton();
        jScrollPane4 = new JScrollPane();
        teamTransferPlayerTransacComboBox = new JComboBox<>();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel2 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        yearTransferPlayerTxtField = new JTextField();
        monthTransferPlayerTxtField = new JTextField();
        dayTransferPlayerTxtField = new JTextField();
        jScrollPane6 = new JScrollPane();
        tableTransferPlayer = new JTable();
        refreshTableTransferPlayerBtn = new JButton();
        tableChooserTransferPlayerComboBox = new JComboBox<>();
        genReportsPanel = new JPanel();
        genReportsMainMenuBtn = new JButton();
        jScrollPane5 = new JScrollPane();
        genReportsTable = new JTable();
        jComboBox1 = new JComboBox<>();
        jComboBox2 = new JComboBox<>();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESports Tracker - Valorant");
        setPreferredSize(new Dimension(1280, 720));
        setResizable(false);
        getContentPane().setLayout(null);

        mainMainPanel.setLayout(new CardLayout());

        mainPanel.setBackground(new Color(255, 204, 51));
        mainPanel.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        mainPanel.setPreferredSize(new Dimension(1280, 720));
        mainPanel.setLayout(new GridBagLayout());

        bannerPanel.setBackground(new Color(51, 102, 0));

        jLabel1.setFont(new Font("Berlin Sans FB Demi", 0, 45)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("ESports Tracker - Valorant");
        jLabel1.setPreferredSize(new Dimension(1280, 720));

        GroupLayout bannerPanelLayout = new GroupLayout(bannerPanel);
        bannerPanel.setLayout(bannerPanelLayout);
        bannerPanelLayout.setHorizontalGroup(bannerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(bannerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
                .addContainerGap())
        );
        bannerPanelLayout.setVerticalGroup(bannerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(bannerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        mainPanel.add(bannerPanel, gridBagConstraints);

        lowerPanel.setMinimumSize(new Dimension(400, 600));
        lowerPanel.setLayout(new GridBagLayout());

        lowerLeftPanel.setBackground(new Color(204, 204, 204));
        lowerLeftPanel.setLayout(new GridBagLayout());

        menuLbl.setFont(new Font("sansserif", 1, 24)); // NOI18N
        menuLbl.setHorizontalAlignment(SwingConstants.CENTER);
        menuLbl.setText("MENU");
        menuLbl.setPreferredSize(new Dimension(70, 28));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 50;
        lowerLeftPanel.add(menuLbl, gridBagConstraints);

        mainViewBtn.setFont(new Font("sansserif", 0, 16)); // NOI18N
        mainViewBtn.setText("Main View");
        mainViewBtn.setPreferredSize(new Dimension(135, 60));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.insets = new Insets(7, 10, 7, 10);
        lowerLeftPanel.add(mainViewBtn, gridBagConstraints);

        makeTransacBtn.setFont(new Font("sansserif", 0, 15)); // NOI18N
        makeTransacBtn.setText("Make Transactions");
        makeTransacBtn.setPreferredSize(mainViewBtn.getPreferredSize());
        makeTransacBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                makeTransacBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.insets = new Insets(7, 10, 7, 10);
        lowerLeftPanel.add(makeTransacBtn, gridBagConstraints);

        genReportsBtn.setFont(new Font("sansserif", 0, 16)); // NOI18N
        genReportsBtn.setText("Generate Reports");
        genReportsBtn.setPreferredSize(mainViewBtn.getPreferredSize());
        genReportsBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                genReportsBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.insets = new Insets(7, 10, 7, 10);
        lowerLeftPanel.add(genReportsBtn, gridBagConstraints);

        exitBtn.setFont(new Font("sansserif", 0, 18)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.setPreferredSize(new Dimension(72, 40));
        exitBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.insets = new Insets(75, 10, 75, 10);
        lowerLeftPanel.add(exitBtn, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        lowerPanel.add(lowerLeftPanel, gridBagConstraints);

        lowerRightPanel.setBackground(new Color(0, 255, 204));

        GroupLayout lowerRightPanelLayout = new GroupLayout(lowerRightPanel);
        lowerRightPanel.setLayout(lowerRightPanelLayout);
        lowerRightPanelLayout.setHorizontalGroup(lowerRightPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 1102, Short.MAX_VALUE)
        );
        lowerRightPanelLayout.setVerticalGroup(lowerRightPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 682, Short.MAX_VALUE)
        );

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        lowerPanel.add(lowerRightPanel, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.9;
        mainPanel.add(lowerPanel, gridBagConstraints);

        mainMainPanel.add(mainPanel, "mainmenu");
        mainPanel.getAccessibleContext().setAccessibleParent(mainMainPanel);

        upperMainViewPanel.setPreferredSize(new Dimension(1280, 400));

        jScrollPane1.setViewportBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        jScrollPane1.setPreferredSize(new Dimension(1000, 470));
        jScrollPane1.setViewportView(mainViewTable);
        jScrollPane1.setWheelScrollingEnabled(false);

        mainViewTable.setModel(mainViewTableModel);
        mainViewTable.setPreferredSize(null);
        mainViewTable.setRequestFocusEnabled(false);
        mainViewTable.setRowSelectionAllowed(false);
        mainViewTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(mainViewTable);

        GroupLayout upperMainViewPanelLayout = new GroupLayout(upperMainViewPanel);
        upperMainViewPanel.setLayout(upperMainViewPanelLayout);
        upperMainViewPanelLayout.setHorizontalGroup(upperMainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, upperMainViewPanelLayout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
        );
        upperMainViewPanelLayout.setVerticalGroup(upperMainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(upperMainViewPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 365, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        lowerMainViewPanel.setPreferredSize(new Dimension(1124, 270));

        mainViewMainMenuBtn.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        mainViewMainMenuBtn.setText("Main Menu");
        mainViewMainMenuBtn.setPreferredSize(new Dimension(89, 30));
        mainViewMainMenuBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mainViewMainMenuBtnActionPerformed(evt);
            }
        });

        tablesMainViewComBoxDefModel = new DefaultComboBoxModel<String>();
        for (String tableName : GeneralUtil.getArrayTableNames()) {
            tablesMainViewComBoxDefModel.addElement(tableName);
        }
        tablesMainViewComboBox.setModel(tablesMainViewComBoxDefModel);
        tablesMainViewComboBox.setPreferredSize(new Dimension(200, 35));

        executeQueryMainViewBtn.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        executeQueryMainViewBtn.setText("Execute Query");
        executeQueryMainViewBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                executeQueryMainViewBtnActionPerformed(evt);
            }
        });

        queryMainViewTxtArea.setColumns(20);
        queryMainViewTxtArea.setRows(5);
        jScrollPane3.setViewportView(queryMainViewTxtArea);

        GroupLayout lowerMainViewPanelLayout = new GroupLayout(lowerMainViewPanel);
        lowerMainViewPanel.setLayout(lowerMainViewPanelLayout);
        lowerMainViewPanelLayout.setHorizontalGroup(lowerMainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(lowerMainViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablesMainViewComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(lowerMainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(executeQueryMainViewBtn, GroupLayout.PREFERRED_SIZE, 129, GroupLayout.PREFERRED_SIZE)
                    .addGroup(lowerMainViewPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 537, GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(mainViewMainMenuBtn, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(197, Short.MAX_VALUE))
        );
        lowerMainViewPanelLayout.setVerticalGroup(lowerMainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(lowerMainViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lowerMainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(mainViewMainMenuBtn, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
                    .addComponent(tablesMainViewComboBox, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(executeQueryMainViewBtn, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        GroupLayout mainViewPanelLayout = new GroupLayout(mainViewPanel);
        mainViewPanel.setLayout(mainViewPanelLayout);
        mainViewPanelLayout.setHorizontalGroup(mainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, mainViewPanelLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lowerMainViewPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(mainViewPanelLayout.createSequentialGroup()
                .addComponent(upperMainViewPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mainViewPanelLayout.setVerticalGroup(mainViewPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(mainViewPanelLayout.createSequentialGroup()
                .addComponent(upperMainViewPanel, GroupLayout.PREFERRED_SIZE, 446, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lowerMainViewPanel, GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainMainPanel.add(mainViewPanel, "mainview");

        leftMakeTransacPanel.setBackground(new Color(204, 204, 0));

        transferPlayerBtn.setText("<html><div style='text-align': center;'>Transfer Player(s) & <br>Dissolve Team</div></html>");

        changeSponsorBtn.setText("Change Sponsorship(s)");
        changeSponsorBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                changeSponsorBtnActionPerformed(evt);
            }
        });

        updateTeamBtn.setText("Update Team Stats");
        updateTeamBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                updateTeamBtnActionPerformed(evt);
            }
        });

        mainMenuTransacBtn.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        mainMenuTransacBtn.setText("Main Menu");
        mainMenuTransacBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mainMenuTransacBtnActionPerformed(evt);
            }
        });

        GroupLayout leftMakeTransacPanelLayout = new GroupLayout(leftMakeTransacPanel);
        leftMakeTransacPanel.setLayout(leftMakeTransacPanelLayout);
        leftMakeTransacPanelLayout.setHorizontalGroup(leftMakeTransacPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(leftMakeTransacPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(leftMakeTransacPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(updateTeamBtn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transferPlayerBtn, GroupLayout.Alignment.LEADING)
                    .addComponent(changeSponsorBtn, GroupLayout.Alignment.LEADING)
                    .addComponent(mainMenuTransacBtn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        leftMakeTransacPanelLayout.setVerticalGroup(leftMakeTransacPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(leftMakeTransacPanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(transferPlayerBtn, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117)
                .addComponent(changeSponsorBtn, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateTeamBtn, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(mainMenuTransacBtn, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightMakeTransacPanel.setLayout(new CardLayout());

        playersComboBoxModel = new DefaultComboBoxModel<String>();
        for (String player : playerNames) {
            playersComboBoxModel.addElement(player);
        }
        playerTransferPlayerComboBox.setModel(playersComboBoxModel);
        jScrollPane2.setViewportView(playerTransferPlayerComboBox);

        finalTransferPlayerBtn.setBackground(new Color(255, 0, 0));
        finalTransferPlayerBtn.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        finalTransferPlayerBtn.setForeground(new Color(255, 255, 255));
        finalTransferPlayerBtn.setText("Transfer Player");

        teamsComboBoxModel = new DefaultComboBoxModel<String>();
        for (String team : teamNames) {
            teamsComboBoxModel.addElement(team);
        }
        teamTransferPlayerTransacComboBox.setModel(teamsComboBoxModel);
        jScrollPane4.setViewportView(teamTransferPlayerTransacComboBox);

        jLabel3.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Player to Transfer");

        jLabel4.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("New Team");

        jLabel5.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Transfer Date");

        jLabel2.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Year");

        jLabel6.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Month");

        jLabel7.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Day");

        yearTransferPlayerTxtField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                yearTransferPlayerTxtFieldActionPerformed(evt);
            }
        });

        dayTransferPlayerTxtField.setToolTipText("");

        tableTransferPlayer.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tableTransferPlayer);

        refreshTableTransferPlayerBtn.setText("Click to Refresh Tables");
        refreshTableTransferPlayerBtn.setEnabled(false);

        tableChooserTransferPlayerComboBox.setModel(tablesMainViewComBoxDefModel);

        GroupLayout transferPlayerPanelLayout = new GroupLayout(transferPlayerPanel);
        transferPlayerPanel.setLayout(transferPlayerPanelLayout);
        transferPlayerPanelLayout.setHorizontalGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                            .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                                    .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(yearTransferPlayerTxtField, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dayTransferPlayerTxtField, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(monthTransferPlayerTxtField)))
                                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 180, GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE))
                            .addGap(45, 45, 45)
                            .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(finalTransferPlayerBtn, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)
                                .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane4, GroupLayout.PREFERRED_SIZE, 197, GroupLayout.PREFERRED_SIZE))))
                        .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                            .addComponent(tableChooserTransferPlayerComboBox, GroupLayout.PREFERRED_SIZE, 95, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refreshTableTransferPlayerBtn, GroupLayout.PREFERRED_SIZE, 153, GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane6, GroupLayout.PREFERRED_SIZE, 439, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(610, Short.MAX_VALUE))
        );
        transferPlayerPanelLayout.setVerticalGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(finalTransferPlayerBtn, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE))
                    .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(yearTransferPlayerTxtField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(monthTransferPlayerTxtField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(dayTransferPlayerTxtField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addGroup(transferPlayerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refreshTableTransferPlayerBtn, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                    .addGroup(transferPlayerPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(tableChooserTransferPlayerComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane6, GroupLayout.PREFERRED_SIZE, 244, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );

        rightMakeTransacPanel.add(transferPlayerPanel, "card2");

        GroupLayout makeTransacPanelLayout = new GroupLayout(makeTransacPanel);
        makeTransacPanel.setLayout(makeTransacPanelLayout);
        makeTransacPanelLayout.setHorizontalGroup(makeTransacPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(makeTransacPanelLayout.createSequentialGroup()
                .addComponent(leftMakeTransacPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightMakeTransacPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        makeTransacPanelLayout.setVerticalGroup(makeTransacPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(makeTransacPanelLayout.createSequentialGroup()
                .addGroup(makeTransacPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                    .addComponent(rightMakeTransacPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftMakeTransacPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 50, Short.MAX_VALUE))
        );

        mainMainPanel.add(makeTransacPanel, "maketransac");

        genReportsMainMenuBtn.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        genReportsMainMenuBtn.setText("Main Menu");

        genReportsTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(genReportsTable);

        jComboBox1.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        GroupLayout genReportsPanelLayout = new GroupLayout(genReportsPanel);
        genReportsPanel.setLayout(genReportsPanelLayout);
        genReportsPanelLayout.setHorizontalGroup(genReportsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(genReportsPanelLayout.createSequentialGroup()
                .addGroup(genReportsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(genReportsPanelLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(genReportsMainMenuBtn, GroupLayout.PREFERRED_SIZE, 135, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE))
                    .addGroup(GroupLayout.Alignment.TRAILING, genReportsPanelLayout.createSequentialGroup()
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, GroupLayout.PREFERRED_SIZE, 912, GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        genReportsPanelLayout.setVerticalGroup(genReportsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, genReportsPanelLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(genReportsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(genReportsPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                .addComponent(genReportsMainMenuBtn, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        mainMainPanel.add(genReportsPanel, "genreports");

        getContentPane().add(mainMainPanel);
        mainMainPanel.setBounds(0, 0, 1280, 780);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitBtnActionPerformed

    private void genReportsBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_genReportsBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genReportsBtnActionPerformed

    private void makeTransacBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_makeTransacBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_makeTransacBtnActionPerformed

    private void mainViewMainMenuBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mainViewMainMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainViewMainMenuBtnActionPerformed

    private void executeQueryMainViewBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_executeQueryMainViewBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_executeQueryMainViewBtnActionPerformed

    private void yearTransferPlayerTxtFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_yearTransferPlayerTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearTransferPlayerTxtFieldActionPerformed

    private void mainMenuTransacBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mainMenuTransacBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainMenuTransacBtnActionPerformed

    private void updateTeamBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_updateTeamBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateTeamBtnActionPerformed

    private void changeSponsorBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_changeSponsorBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeSponsorBtnActionPerformed

    public CardLayout getCardLayout() {
        return (CardLayout) mainMainPanel.getLayout();
    }
    public JPanel getMainMainPanel() {
        return mainMainPanel;
    }
    public JPanel getMainPanel() {
        return mainPanel;
    }
    public JPanel getMainViewPanel() {
        return mainViewPanel;
    }
    

    // Main Menu
    public JButton getMainViewBtn() {
        return mainViewBtn;
    }
    public JButton getMakeTransacBtn() {
        return makeTransacBtn;
    }
    public JButton getGenReportsBtn() {
        return genReportsBtn;
    }
    public JButton getExitBtn() {
        return exitBtn;
    }

    // Main View
    public JButton getExecuteQueryMainViewBtn() {
        return executeQueryMainViewBtn;
    }
    
    public JComboBox<String> getTablesMainViewComboBox() {
        return tablesMainViewComboBox;
    }
    
    public JTextArea getQueryMainViewTxtArea() {
        return queryMainViewTxtArea;
    }
    
    public JButton getMainViewMainMenuBtn() {
        return mainViewMainMenuBtn;
    }
    
    public JTable getMainViewTable() {
        return mainViewTable;
    }
    
    // Transactions
    
    // TRANSFER PLAYER
    public JButton getMainMenuTransacBtn() {
        return mainMenuTransacBtn;
    }
    public JButton getFinalTransferPlayerBtn() {
        return finalTransferPlayerBtn;
    }
    
    public JComboBox<String> getPlayerTransferPlayerComboBox() {
        return playerTransferPlayerComboBox;
    }
    
    public JComboBox<String> getTeamTransferPlayerTransacComboBox() {
        return teamTransferPlayerTransacComboBox;
    }
    
    public JComboBox<String> getTableChooserTransferPlayerComboBox() {
        return tableChooserTransferPlayerComboBox;
    }
 
    public JTextField getYearTransferPlayerTxtField() {
        return yearTransferPlayerTxtField;
    }
    public JTextField getMonthTransferPlayerTxtField() {
        return monthTransferPlayerTxtField;
    }
    public JTextField getDayTransferPlayerTxtField() {
        return dayTransferPlayerTxtField;
    }
    
    public JButton getRefreshTableTransferPlayerBtn() {
        return refreshTableTransferPlayerBtn;
    }
    
    // 
    
    
    public DefaultTableModel getMainViewTableModel() {
        return mainViewTableModel;
    }
    public void setMainViewTableModel(DefaultTableModel mainViewTableModel) {
        this.mainViewTableModel = mainViewTableModel;  
    }
    

    public void addClickListener(ActionListener e) {
        this.mainViewBtn.addActionListener(e);
        this.makeTransacBtn.addActionListener(e);
        this.genReportsBtn.addActionListener(e);
        this.exitBtn.addActionListener(e);

        this.executeQueryMainViewBtn.addActionListener(e);
        this.mainViewMainMenuBtn.addActionListener(e);
        this.tablesMainViewComboBox.addActionListener(e);

        this.mainMenuTransacBtn.addActionListener(e);
        this.finalTransferPlayerBtn.addActionListener(e);
    }

    public ArrayList<String> getPlayerNames() {
        return playerNames;
    }
    public void setPlayerNames(ArrayList<String> playerNames) {
        this.playerNames = playerNames;
    }
    public ArrayList<String> getTeamNames() {
        return teamNames;
    }
    public void setTeamNames(ArrayList<String> teamNames) {
        this.teamNames = teamNames;
    }
    public ArrayList<String> getSponsorNames() {
        return sponsorNames;
    }
    public void setSponsorNames(ArrayList<String> sponsorNames) {
        this.sponsorNames = sponsorNames;
    }

    public void updatePlayersComboBoxModel() {
        playersComboBoxModel.removeAllElements();
        for (String player : playerNames) {
            playersComboBoxModel.addElement(player);
        }
    }

    public void updateTeamsComboBoxModel() {
        teamsComboBoxModel.removeAllElements();
        for (String team : teamNames) {
            teamsComboBoxModel.addElement(team);
        }
    }

    // TODO: Add sponsor combobox model

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    private DefaultTableModel mainViewTableModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel bannerPanel;
    private JButton changeSponsorBtn;
    private JTextField dayTransferPlayerTxtField;
    private JButton executeQueryMainViewBtn;
    private JButton exitBtn;
    private JButton finalTransferPlayerBtn;
    private JButton genReportsBtn;
    private JButton genReportsMainMenuBtn;
    private JPanel genReportsPanel;
    private JTable genReportsTable;
    private JComboBox<String> jComboBox1;
    private JComboBox<String> jComboBox2;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JScrollPane jScrollPane4;
    private JScrollPane jScrollPane5;
    private JScrollPane jScrollPane6;
    private JPanel leftMakeTransacPanel;
    private JPanel lowerLeftPanel;
    private JPanel lowerMainViewPanel;
    private JPanel lowerPanel;
    private JPanel lowerRightPanel;
    private JPanel mainMainPanel;
    private JButton mainMenuTransacBtn;
    private JPanel mainPanel;
    private JButton mainViewBtn;
    private JButton mainViewMainMenuBtn;
    private JPanel mainViewPanel;
    private static JTable mainViewTable;
    private JButton makeTransacBtn;
    private JPanel makeTransacPanel;
    private JLabel menuLbl;
    private JTextField monthTransferPlayerTxtField;
    private JComboBox<String> playerTransferPlayerComboBox;
    private DefaultComboBoxModel<String> playersComboBoxModel;
    private JTextArea queryMainViewTxtArea;
    private JButton refreshTableTransferPlayerBtn;
    private JPanel rightMakeTransacPanel;
    private JComboBox<String> tableChooserTransferPlayerComboBox;
    private JTable tableTransferPlayer;
    private JComboBox<String> tablesMainViewComboBox;
    private DefaultComboBoxModel<String> tablesMainViewComBoxDefModel;
    private JComboBox<String> teamTransferPlayerTransacComboBox;
    private DefaultComboBoxModel<String> teamsComboBoxModel;
    private JButton transferPlayerBtn;
    private JPanel transferPlayerPanel;
    private JButton updateTeamBtn;
    private JPanel upperMainViewPanel;
    private JTextField yearTransferPlayerTxtField;
    // End of variables declaration//GEN-END:variables
    private ArrayList<String> playerNames, teamNames, sponsorNames;
    private DefaultComboBoxModel<String> playerTransferDefaultComboBoxModel;
}
